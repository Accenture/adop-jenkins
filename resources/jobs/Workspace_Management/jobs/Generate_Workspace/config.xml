<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>WORKSPACE_NAME</name>
          <description>The name of the workspace to be generated. This must not contain spaces - use underscores instead.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ADMIN_USERS</name>
          <description>The list of users&apos; email addresses that should be setup initially as admin. They will have full access to all jobs within the workspace.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEVELOPER_USERS</name>
          <description>The list of users&apos; email addresses that should be setup initially as developers. They will have full access to all non-admin jobs within the workspace.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>VIEWER_USERS</name>
          <description>The list of users&apos; email addresses that should be setup initially as viewers. They will have read-only access to all non-admin jobs within the workspace.</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit.service.adop.consul:29418/platform-management</url>
        <credentialsId>adop-jenkins-master</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Validate Variables
pattern=&quot; |&apos;&quot;
if [[ &quot;${WORKSPACE_NAME}&quot; =~ ${pattern} ]]; then
	echo &quot;WORKSPACE_NAME contains a space, please replace with an underscore - exiting...&quot;
	exit 1
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># LDAP
${WORKSPACE}/common/ldap/generate_role.sh -r &quot;admin&quot; -n &quot;${WORKSPACE_NAME}&quot; -d &quot;${DC}&quot; -g &quot;${OU_GROUPS}&quot; -p &quot;${OU_PEOPLE}&quot; -u &quot;${ADMIN_USERS}&quot; -f &quot;${OUTPUT_FILE}&quot; -w &quot;${WORKSPACE}&quot;
${WORKSPACE}/common/ldap/generate_role.sh -r &quot;developer&quot; -n &quot;${WORKSPACE_NAME}&quot; -d &quot;${DC}&quot; -g &quot;${OU_GROUPS}&quot; -p &quot;${OU_PEOPLE}&quot; -u &quot;${DEVELOPER_USERS}&quot; -f &quot;${OUTPUT_FILE}&quot; -w &quot;${WORKSPACE}&quot;
${WORKSPACE}/common/ldap/generate_role.sh -r &quot;viewer&quot; -n &quot;${WORKSPACE_NAME}&quot; -d &quot;${DC}&quot; -g &quot;${OU_GROUPS}&quot; -p &quot;${OU_PEOPLE}&quot; -u &quot;${VIEWER_USERS}&quot; -f &quot;${OUTPUT_FILE}&quot; -w &quot;${WORKSPACE}&quot;

scp -o StrictHostKeyChecking=no ${OUTPUT_FILE} ec2-user@ldap.service.adop.consul:${OUTPUT_FILE}
ssh -o StrictHostKeyChecking=no -t -t -y ec2-user@ldap.service.adop.consul &quot;sudo mv ${OUTPUT_FILE} /data/ldap/config/${OUTPUT_FILE};export IP=\$(hostname --ip-address); sudo docker exec ADOP-LDAP /usr/local/bin/load_ldif.sh -h \${IP} -u ${LDAP_ADMIN_USER} -p ${LDAP_ADMIN_PASSWORD} -b ${DC} -f /etc/ldap/slapd.d/${OUTPUT_FILE}; sudo rm -f /data/ldap/config/${OUTPUT_FILE}&quot;

ADMIN_USERS=$(echo ${ADMIN_USERS} | tr &apos;,&apos; &apos; &apos;)
DEVELOPER_USERS=$(echo ${DEVELOPER_USERS} | tr &apos;,&apos; &apos; &apos;)
VIEWER_USERS=$(echo ${VIEWER_USERS} | tr &apos;,&apos; &apos; &apos;)

# Gerrit
for user in $ADMIN_USERS $DEVELOPER_USERS $VIEWER_USERS
do
        username=$(echo ${user} | cut -d&apos;@&apos; -f1)
        ssh -o StrictHostKeyChecking=no -t -t -y ec2-user@gerrit.service.adop.consul &quot;sudo docker exec ADOP-Gerrit /var/gerrit/adop_scripts/create_user.sh -u ${username} -p ${username}&quot;
done</command>
    </hudson.tasks.Shell>
    <javaposse.jobdsl.plugin.ExecuteDslScripts plugin="job-dsl@1.39">
      <targets>workspaces/jobs/**/*.groovy</targets>
      <usingScriptText>false</usingScriptText>
      <ignoreExisting>false</ignoreExisting>
      <removedJobAction>IGNORE</removedJobAction>
      <removedViewAction>IGNORE</removedViewAction>
      <lookupStrategy>JENKINS_ROOT</lookupStrategy>
      <additionalClasspath></additionalClasspath>
    </javaposse.jobdsl.plugin.ExecuteDslScripts>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.25">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>${WORKSPACE}/workspaces/groovy/acl_admin.groovy</scriptFile>
      </scriptSource>
      <bindings></bindings>
      <classpath></classpath>
    </hudson.plugins.groovy.SystemGroovy>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.25">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>${WORKSPACE}/workspaces/groovy/acl_developer.groovy</scriptFile>
      </scriptSource>
      <bindings></bindings>
      <classpath></classpath>
    </hudson.plugins.groovy.SystemGroovy>
    <hudson.plugins.groovy.SystemGroovy plugin="groovy@1.25">
      <scriptSource class="hudson.plugins.groovy.FileScriptSource">
        <scriptFile>${WORKSPACE}/workspaces/groovy/acl_viewer.groovy</scriptFile>
      </scriptSource>
      <bindings></bindings>
      <classpath></classpath>
    </hudson.plugins.groovy.SystemGroovy>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.26">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <EnvInjectBuildWrapper plugin="envinject@1.91.3">
      <info>
        <propertiesContent>DC=dc=adop,dc=accenture,dc=com
OU_GROUPS=ou=groups
OU_PEOPLE=ou=people
OUTPUT_FILE=output.ldif</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.91.3">
      <injectGlobalPasswords>true</injectGlobalPasswords>
      <maskPasswordParameters>true</maskPasswordParameters>
      <passwordEntries/>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper plugin="credentials-binding@1.6">
      <bindings>
        <org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
          <credentialsId>adop-ldap-admin</credentialsId>
          <usernameVariable>LDAP_ADMIN_USER</usernameVariable>
          <passwordVariable>LDAP_ADMIN_PASSWORD</passwordVariable>
        </org.jenkinsci.plugins.credentialsbinding.impl.UsernamePasswordMultiBinding>
      </bindings>
    </org.jenkinsci.plugins.credentialsbinding.impl.SecretBuildWrapper>
  </buildWrappers>
</project>