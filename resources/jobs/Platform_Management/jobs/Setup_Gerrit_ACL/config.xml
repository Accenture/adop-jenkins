<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <de.pellepelster.jenkins.walldisplay.WallDisplayJobProperty plugin="jenkinswalldisplay@0.6.30"/>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.3.5">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>ssh://jenkins@gerrit.service.adop.consul:29418/platform-management</url>
        <credentialsId>adop-jenkins-master</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>platform-management</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash -ex

# Fetch All-Projects 
cd ${WORKSPACE}
git clone ssh://jenkins@gerrit.service.adop.consul:29418/All-Projects
cd ${WORKSPACE}/All-Projects
git fetch origin refs/meta/config:refs/remotes/origin/meta/config
git checkout meta/config

# Apply changes
cp ${WORKSPACE}/platform-management/gerrit/project.config .

if ! grep -q &quot;$(cat ${WORKSPACE}/platform-management/gerrit/groups)&quot; groups
then
	cat ${WORKSPACE}/platform-management/gerrit/groups &gt;&gt; ${WORKSPACE}/All-Projects/groups
else
	echo &quot;Groups already found, skipping&quot;
fi

# Push
if [ $(git status --porcelain | wc -l) -gt 0 ]; then
    git add project.config groups
    git commit -m &quot;Applying ADOP Gerrit ACL&quot;
    git push origin meta/config:meta/config
else
    echo &quot;Nothing to commit&quot;
fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.26">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <com.michelin.cio.hudson.plugins.maskpasswords.MaskPasswordsBuildWrapper/>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.1"/>
  </buildWrappers>
</project>